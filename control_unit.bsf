/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 368 352)
	(text "control_unit" (rect 5 0 49 12)(font "Arial" ))
	(text "inst" (rect 8 320 20 332)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "instruction[31..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "instruction[31..0]" (rect 21 27 83 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" ))
		(text "clk" (rect 21 43 31 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "rst" (rect 0 0 10 12)(font "Arial" ))
		(text "rst" (rect 21 59 31 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 0 80)
		(input)
		(text "coP_NaN_flag" (rect 0 0 60 12)(font "Arial" ))
		(text "coP_NaN_flag" (rect 21 75 81 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "coP_UF_flag" (rect 0 0 54 12)(font "Arial" ))
		(text "coP_UF_flag" (rect 21 91 75 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 1))
	)
	(port
		(pt 0 112)
		(input)
		(text "coP_OF_flag" (rect 0 0 54 12)(font "Arial" ))
		(text "coP_OF_flag" (rect 21 107 75 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 1))
	)
	(port
		(pt 0 128)
		(input)
		(text "coP_Division_by_zero_flag" (rect 0 0 110 12)(font "Arial" ))
		(text "coP_Division_by_zero_flag" (rect 21 123 131 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 1))
	)
	(port
		(pt 352 32)
		(output)
		(text "reg1[4..0]" (rect 0 0 37 12)(font "Arial" ))
		(text "reg1[4..0]" (rect 294 27 331 39)(font "Arial" ))
		(line (pt 352 32)(pt 336 32)(line_width 3))
	)
	(port
		(pt 352 48)
		(output)
		(text "reg2[4..0]" (rect 0 0 38 12)(font "Arial" ))
		(text "reg2[4..0]" (rect 293 43 331 55)(font "Arial" ))
		(line (pt 352 48)(pt 336 48)(line_width 3))
	)
	(port
		(pt 352 64)
		(output)
		(text "reg3[4..0]" (rect 0 0 38 12)(font "Arial" ))
		(text "reg3[4..0]" (rect 293 59 331 71)(font "Arial" ))
		(line (pt 352 64)(pt 336 64)(line_width 3))
	)
	(port
		(pt 352 80)
		(output)
		(text "s_r_amount[4..0]" (rect 0 0 70 12)(font "Arial" ))
		(text "s_r_amount[4..0]" (rect 261 75 331 87)(font "Arial" ))
		(line (pt 352 80)(pt 336 80)(line_width 3))
	)
	(port
		(pt 352 96)
		(output)
		(text "im_data[31..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "im_data[31..0]" (rect 276 91 331 103)(font "Arial" ))
		(line (pt 352 96)(pt 336 96)(line_width 3))
	)
	(port
		(pt 352 112)
		(output)
		(text "register_write_word_enable" (rect 0 0 108 12)(font "Arial" ))
		(text "register_write_word_enable" (rect 223 107 331 119)(font "Arial" ))
		(line (pt 352 112)(pt 336 112)(line_width 1))
	)
	(port
		(pt 352 128)
		(output)
		(text "register_write_byte_enable" (rect 0 0 107 12)(font "Arial" ))
		(text "register_write_byte_enable" (rect 224 123 331 135)(font "Arial" ))
		(line (pt 352 128)(pt 336 128)(line_width 1))
	)
	(port
		(pt 352 144)
		(output)
		(text "alu_opcode[4..0]" (rect 0 0 66 12)(font "Arial" ))
		(text "alu_opcode[4..0]" (rect 265 139 331 151)(font "Arial" ))
		(line (pt 352 144)(pt 336 144)(line_width 3))
	)
	(port
		(pt 352 160)
		(output)
		(text "jump_mux_signal[1..0]" (rect 0 0 88 12)(font "Arial" ))
		(text "jump_mux_signal[1..0]" (rect 243 155 331 167)(font "Arial" ))
		(line (pt 352 160)(pt 336 160)(line_width 3))
	)
	(port
		(pt 352 176)
		(output)
		(text "write_back_on_register_mux_signal" (rect 0 0 143 12)(font "Arial" ))
		(text "write_back_on_register_mux_signal" (rect 188 171 331 183)(font "Arial" ))
		(line (pt 352 176)(pt 336 176)(line_width 1))
	)
	(port
		(pt 352 192)
		(output)
		(text "alu_input_mux_signal" (rect 0 0 84 12)(font "Arial" ))
		(text "alu_input_mux_signal" (rect 247 187 331 199)(font "Arial" ))
		(line (pt 352 192)(pt 336 192)(line_width 1))
	)
	(port
		(pt 352 208)
		(output)
		(text "alu_or_coprocessor_mux_signal" (rect 0 0 130 12)(font "Arial" ))
		(text "alu_or_coprocessor_mux_signal" (rect 201 203 331 215)(font "Arial" ))
		(line (pt 352 208)(pt 336 208)(line_width 1))
	)
	(port
		(pt 352 224)
		(output)
		(text "PC_enable" (rect 0 0 43 12)(font "Arial" ))
		(text "PC_enable" (rect 288 219 331 231)(font "Arial" ))
		(line (pt 352 224)(pt 336 224)(line_width 1))
	)
	(port
		(pt 352 240)
		(output)
		(text "memwrite_enable_a" (rect 0 0 80 12)(font "Arial" ))
		(text "memwrite_enable_a" (rect 251 235 331 247)(font "Arial" ))
		(line (pt 352 240)(pt 336 240)(line_width 1))
	)
	(port
		(pt 352 256)
		(output)
		(text "memwrite_enable_b" (rect 0 0 80 12)(font "Arial" ))
		(text "memwrite_enable_b" (rect 251 251 331 263)(font "Arial" ))
		(line (pt 352 256)(pt 336 256)(line_width 1))
	)
	(port
		(pt 352 272)
		(output)
		(text "memread_enable_a" (rect 0 0 80 12)(font "Arial" ))
		(text "memread_enable_a" (rect 251 267 331 279)(font "Arial" ))
		(line (pt 352 272)(pt 336 272)(line_width 1))
	)
	(port
		(pt 352 288)
		(output)
		(text "memread_enable_b" (rect 0 0 80 12)(font "Arial" ))
		(text "memread_enable_b" (rect 251 283 331 295)(font "Arial" ))
		(line (pt 352 288)(pt 336 288)(line_width 1))
	)
	(drawing
		(rectangle (rect 16 16 336 320)(line_width 1))
	)
)
